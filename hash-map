#include<stdio.h>
struct node
{
int key;
int value;
struct node *next;
};
strcuct table
{
int size;
struct node **list;
};
struct table *createtable (int size)
{
struct table *t=(struct table *)malloc(size of struct table);
t->size=size;
t->list=(struct node**)malloc(sizeof(srtuct node*)*size);
int i;
for(i=0;i<size;i++)
t->list[i]=NULL;
return t;
}
int hashcode(structtable *t,int key)
{
if(key<0)
return-(key%t->size);
return key%t->size;
}
void insert(struct table *t,int key,int val)
{
int pos=hashcode(t,key);
struct node*list=t->list[pos];
struct node*newNode=9struct node*)malloc(size of(structnode));
struct node*temp=list;
while(temp)
{
if(temp->key==key)
{
temp->val=val;
return;
}
temp=temp->next;
}
newNode->key=key;
newNode->val=val;
newNode->next=list;
t->list[pos]=newNode;
}
int lookup(struct table *t,int key)
{
int pos=hashcode(t,key);
struct node*list=t->list[pos];
while(temp)
{
if(temp->key==key)
return temp->val'}
temp=temp=temp->next;
}
return -1;
}
int main()
{
struct table *t=createTable(5);
insert(t,2,3);
insert(t,4,5);
printf("%d",look(t,5));
return 0;
}
